{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Drew\\\\Documents\\\\VisualStudio\\\\pin3\\\\src\\\\components\\\\paginacao\\\\paginacao.js\";\nimport React, { Component } from 'react';\nimport api from '../../services/api';\nimport { ContextoUsuario } from '../Session';\nimport PaginacaoMain from './paginacaoMain';\nconst LIMIT_ITENS = 8;\nexport default class Paginacao extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      elemMostra: [],\n      page: 1,\n      pages: 1\n    };\n\n    this.carregaProdutos = async function (page = 1) {\n      debugger;\n      let response = null;\n\n      switch (this.props.tipo) {\n        case 1:\n          if (typeof this.context.filtro === 'object') {\n            response = await api.get(\"/Produto\");\n          } else {\n            let oFiltro = JSON.parse(this.context.filtro);\n            response = await api.get(\"/Produto/conteudo=\".concat(oFiltro.conteudo, \"&filtro=\").concat(oFiltro.filtro));\n          }\n\n          break;\n      } // response = this.state.elementos;\n\n\n      let result = [];\n      let totalPage = Math.ceil(response.data.length / LIMIT_ITENS);\n      let count = page * LIMIT_ITENS - LIMIT_ITENS;\n      let delimitador = count + LIMIT_ITENS;\n\n      for (let i = count; i < delimitador; i++) {\n        if (response.data[i] != null) {\n          result.push(response.data[i]);\n        }\n      }\n\n      debugger;\n      this.setState({\n        elemMostra: result,\n        pages: totalPage,\n        page\n      });\n    };\n\n    this.nextPage = () => {\n      const _this$context = this.context,\n            pesquisar = _this$context.pesquisar,\n            pesquisarInativo = _this$context.pesquisarInativo;\n      const _this$state = this.state,\n            page = _this$state.page,\n            pages = _this$state.pages;\n\n      if (pesquisar) {\n        pesquisarInativo();\n      }\n\n      if (page == pages) {\n        return;\n      }\n\n      const nPagina = page + 1;\n      this.carregaProdutos(nPagina);\n    };\n\n    this.prevPage = () => {\n      const _this$context2 = this.context,\n            pesquisar = _this$context2.pesquisar,\n            pesquisarInativo = _this$context2.pesquisarInativo;\n      const page = this.state.page;\n\n      if (pesquisar) {\n        pesquisarInativo();\n      }\n\n      if (page == 1) {\n        return;\n      }\n\n      const nPagina = page - 1;\n      this.carregaProdutos(nPagina);\n    };\n  }\n\n  componentDidMount() {\n    const pesquisarInativo = this.context.pesquisarInativo;\n    const tet = setInterval(pesquisarInativo, 1000);\n    debugger;\n    this.carregaProdutos();\n  }\n\n  componentDidUpdate() {\n    const _this$context3 = this.context,\n          pesquisar = _this$context3.pesquisar,\n          pesquisarInativo = _this$context3.pesquisarInativo;\n\n    if (!pesquisar) {\n      return;\n    }\n\n    this.carregaProdutos();\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          elemMostra = _this$state2.elemMostra,\n          page = _this$state2.page,\n          pages = _this$state2.pages;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(PaginacaoMain, {\n      produtos: elemMostra,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), elemMostra.length > 0 ? React.createElement(\"footer\", {\n      className: \"rodape\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"paginacao\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      disabled: page == 1,\n      onClick: this.prevPage,\n      className: \"btn azul-roxo clicavel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Anterior\"), React.createElement(\"button\", {\n      disabled: page == pages,\n      onClick: this.nextPage,\n      className: \"btn azul-roxo clicavel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Proximo\"))) : \"\");\n  }\n\n}\nPaginacao.contextType = ContextoUsuario;","map":{"version":3,"sources":["C:\\Users\\Drew\\Documents\\VisualStudio\\pin3\\src\\components\\paginacao\\paginacao.js"],"names":["React","Component","api","ContextoUsuario","PaginacaoMain","LIMIT_ITENS","Paginacao","state","elemMostra","page","pages","carregaProdutos","response","props","tipo","context","filtro","get","oFiltro","JSON","parse","conteudo","result","totalPage","Math","ceil","data","length","count","delimitador","i","push","setState","nextPage","pesquisar","pesquisarInativo","nPagina","prevPage","componentDidMount","tet","setInterval","componentDidUpdate","render","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport api                 from '../../services/api';\r\nimport { ContextoUsuario } from '../Session';\r\n\r\nimport PaginacaoMain from './paginacaoMain';\r\n\r\nconst LIMIT_ITENS = 8;\r\n\r\nexport default class Paginacao extends Component {\r\n\r\n    static contextType = ContextoUsuario;\r\n\r\n    state = {\r\n        elemMostra: [],\r\n        page     : 1,\r\n        pages    : 1,\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { pesquisarInativo } = this.context;\r\n\r\n\r\n        const tet = setInterval(pesquisarInativo, 1000);\r\n\r\n        debugger;\r\n        this.carregaProdutos();\r\n    }\r\n\r\n    carregaProdutos = async function(page = 1) {\r\n        debugger\r\n        let response = null;\r\n\r\n        switch(this.props.tipo) {\r\n            case 1:\r\n                if(typeof this.context.filtro === 'object') {\r\n                    response = await api.get(`/Produto`);\r\n                } else {\r\n                    let oFiltro = JSON.parse(this.context.filtro);\r\n                    response = await api.get(`/Produto/conteudo=${oFiltro.conteudo}&filtro=${oFiltro.filtro}`);\r\n                }\r\n                break;\r\n        }\r\n \r\n        // response = this.state.elementos;\r\n\r\n        let result      = [];\r\n        let totalPage   = Math.ceil(response.data.length/LIMIT_ITENS); \r\n        let count       = (page * LIMIT_ITENS) - LIMIT_ITENS;\r\n        let delimitador = count + LIMIT_ITENS;\r\n       \r\n        for(let i = count; i < delimitador; i++) {\r\n            if(response.data[i] != null) {\r\n                result.push(response.data[i]);\r\n            }\r\n        }\r\n\r\n        debugger\r\n\r\n        this.setState({\r\n            elemMostra : result,\r\n            pages      : totalPage,\r\n            page,\r\n        });\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const { pesquisar, pesquisarInativo } = this.context;\r\n\r\n        if(!pesquisar) {\r\n            return;\r\n        }\r\n\r\n\r\n        this.carregaProdutos();\r\n    };\r\n\r\n    nextPage = () => {\r\n        const { pesquisar, pesquisarInativo } = this.context;\r\n        const { page, pages } = this.state;\r\n\r\n        if(pesquisar) {\r\n            pesquisarInativo();\r\n        }\r\n\r\n        if(page == pages) {\r\n            return;\r\n        }\r\n\r\n        const nPagina = page + 1;\r\n\r\n        this.carregaProdutos(nPagina);\r\n    };\r\n\r\n    prevPage = () => {\r\n        const { pesquisar, pesquisarInativo } = this.context;\r\n        const { page } = this.state;\r\n\r\n        if(pesquisar) {\r\n            pesquisarInativo();\r\n        }\r\n\r\n        if(page == 1) {\r\n            return;\r\n        }\r\n\r\n        const nPagina = page - 1;\r\n\r\n        this.carregaProdutos(nPagina);\r\n    };\r\n\r\n    render() {\r\n\r\n        const { elemMostra, page, pages } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <PaginacaoMain produtos={elemMostra}/>\r\n                {elemMostra.length > 0? (\r\n                    <footer className=\"rodape\">\r\n                        <div className=\"paginacao\">\r\n                            <button \r\n                                disabled={page == 1}   \r\n                                onClick={this.prevPage}\r\n                                className=\"btn azul-roxo clicavel\"\r\n                            >\r\n                                Anterior\r\n                            </button>\r\n                            <button \r\n                                disabled={page == pages} \r\n                                onClick={this.nextPage}\r\n                                className=\"btn azul-roxo clicavel\"\r\n                            >\r\n                                Proximo\r\n                            </button>\r\n                        </div>\r\n                    </footer>\r\n                ) : \"\"}\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}