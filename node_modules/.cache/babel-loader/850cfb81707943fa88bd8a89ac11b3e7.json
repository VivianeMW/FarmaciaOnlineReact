{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Drew\\\\Documents\\\\VisualStudio\\\\pin3\\\\src\\\\components\\\\paginacao\\\\paginacao.js\";\nimport React, { Component } from 'react';\nimport api from '../../services/api';\nimport { ContextoUsuario } from '../Session';\nimport PaginacaoMain from './paginacaoMain';\nimport PaginacaoCarrinho from './paginacaoCarrinho';\nexport default class Paginacao extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      elemMostra: [],\n      page: 1,\n      pages: 1,\n      LIMIT_ITENS: this.props.limite,\n      atualizar: false\n    };\n\n    this.carregaProdutos = async function (page = 1) {\n      debugger;\n      const tipo = this.props.tipo;\n      let limite = this.state.limite;\n      let response = null;\n      let elementos = [];\n\n      switch (tipo) {\n        case 1:\n          //paginacao da pagina principal\n          if (typeof this.context.filtro === 'object') {\n            response = await api.get(\"/Produto\");\n          } else {\n            let oFiltro = JSON.parse(this.context.filtro);\n            response = await api.get(\"/Produto/conteudo=\".concat(oFiltro.conteudo, \"&filtro=\").concat(oFiltro.filtro));\n          }\n\n          elementos = response.data;\n          break;\n\n        case 2:\n          //paginacao da pagina de carrinho\n          let chaves = Object.keys(localStorage);\n          let qChaves = chaves.length; //quantidade de chaves\n\n          while (qChaves--) {\n            elementos.push(JSON.parse(localStorage.getItem(chaves[qChaves])));\n          }\n\n          break;\n      } // response = this.state.elementos;\n\n\n      let result = [];\n      let totalPage = Math.ceil(elementos.length / LIMIT_ITENS);\n      let count = page * LIMIT_ITENS - LIMIT_ITENS;\n      let delimitador = count + LIMIT_ITENS;\n\n      for (let i = count; i < delimitador; i++) {\n        if (elementos[i] != null) {\n          result.push(elementos[i]);\n        }\n      }\n\n      debugger;\n      this.setState({\n        elemMostra: result,\n        pages: totalPage,\n        page\n      });\n    };\n\n    this.atualiza = () => {\n      this.setState({\n        atualizar: true\n      });\n    };\n\n    this.renderPaginacao = () => {\n      const tipo = this.props.tipo;\n      const elemMostra = this.state.elemMostra;\n\n      switch (tipo) {\n        case 1:\n          //paginacao da pagina principal\n          return React.createElement(PaginacaoMain, {\n            produtos: elemMostra,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          });\n\n        case 2:\n          //paginacao da pagina carrinho\n          return React.createElement(PaginacaoCarrinho, {\n            produtos: elemMostra,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          });\n      }\n    };\n\n    this.nextPage = () => {\n      const _this$context = this.context,\n            pesquisar = _this$context.pesquisar,\n            pesquisarInativo = _this$context.pesquisarInativo;\n      const _this$state = this.state,\n            page = _this$state.page,\n            pages = _this$state.pages;\n\n      if (pesquisar) {\n        pesquisarInativo();\n      }\n\n      if (page == pages) {\n        return;\n      }\n\n      const nPagina = page + 1;\n      this.carregaProdutos(nPagina);\n    };\n\n    this.prevPage = () => {\n      const _this$context2 = this.context,\n            pesquisar = _this$context2.pesquisar,\n            pesquisarInativo = _this$context2.pesquisarInativo;\n      const page = this.state.page;\n\n      if (pesquisar) {\n        pesquisarInativo();\n      }\n\n      if (page == 1) {\n        return;\n      }\n\n      const nPagina = page - 1;\n      this.carregaProdutos(nPagina);\n    };\n  }\n\n  componentDidMount() {\n    const tipo = this.props.tipo;\n\n    switch (tipo) {\n      case 1:\n        //paginacao main\n        let pesquisarInativo = this.context.pesquisarInativo;\n        let tet = setInterval(pesquisarInativo, 1000);\n        break;\n    }\n\n    debugger;\n    this.carregaProdutos();\n  }\n\n  componentDidUpdate() {\n    const tipo = this.props;\n\n    switch (tipo) {\n      case 1:\n        //pagina main\n        let _this$context3 = this.context,\n            pesquisar = _this$context3.pesquisar,\n            pesquisarInativo = _this$context3.pesquisarInativo;\n\n        if (!pesquisar) {\n          return;\n        }\n\n        break;\n\n      case 2:\n        if (!this.state.atualizar) {\n          return;\n        }\n\n        this.setState({\n          atualizar: false\n        });\n        break;\n    }\n\n    this.carregaProdutos();\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          elemMostra = _this$state2.elemMostra,\n          page = _this$state2.page,\n          pages = _this$state2.pages;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, this.renderPaginacao(), elemMostra.length > 0 ? React.createElement(\"footer\", {\n      className: \"rodape\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"paginacao\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      disabled: page == 1,\n      onClick: this.prevPage,\n      className: \"btn azul-roxo clicavel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Anterior\"), React.createElement(\"button\", {\n      disabled: page == pages,\n      onClick: this.nextPage,\n      className: \"btn azul-roxo clicavel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Proximo\"))) : \"\");\n  }\n\n}\nPaginacao.contextType = ContextoUsuario;","map":{"version":3,"sources":["C:\\Users\\Drew\\Documents\\VisualStudio\\pin3\\src\\components\\paginacao\\paginacao.js"],"names":["React","Component","api","ContextoUsuario","PaginacaoMain","PaginacaoCarrinho","Paginacao","state","elemMostra","page","pages","LIMIT_ITENS","props","limite","atualizar","carregaProdutos","tipo","response","elementos","context","filtro","get","oFiltro","JSON","parse","conteudo","data","chaves","Object","keys","localStorage","qChaves","length","push","getItem","result","totalPage","Math","ceil","count","delimitador","i","setState","atualiza","renderPaginacao","nextPage","pesquisar","pesquisarInativo","nPagina","prevPage","componentDidMount","tet","setInterval","componentDidUpdate","render","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport api                 from '../../services/api';\r\nimport { ContextoUsuario } from '../Session';\r\n\r\nimport PaginacaoMain     from './paginacaoMain';\r\nimport PaginacaoCarrinho from './paginacaoCarrinho';\r\n\r\nexport default class Paginacao extends Component {\r\n\r\n    static contextType = ContextoUsuario;\r\n\r\n    state = {\r\n        elemMostra: [],\r\n        page     : 1,\r\n        pages    : 1,\r\n        LIMIT_ITENS : this.props.limite,\r\n        atualizar : false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { tipo } = this.props;\r\n\r\n        switch(tipo) {\r\n            case 1://paginacao main\r\n                let { pesquisarInativo } = this.context;\r\n                let tet = setInterval(pesquisarInativo, 1000);\r\n                break;\r\n        }\r\n\r\n        debugger;\r\n        this.carregaProdutos();\r\n    }\r\n\r\n    carregaProdutos = async function(page = 1) {\r\n        debugger\r\n        const { tipo } = this.props;\r\n        let limite     = this.state.limite; \r\n        let response   = null;\r\n        let elementos  = [];\r\n\r\n        switch(tipo) {\r\n            case 1://paginacao da pagina principal\r\n                if(typeof this.context.filtro === 'object') {\r\n                    response = await api.get(`/Produto`);\r\n                } else {\r\n                    let oFiltro = JSON.parse(this.context.filtro);\r\n                    response = await api.get(`/Produto/conteudo=${oFiltro.conteudo}&filtro=${oFiltro.filtro}`);\r\n                }\r\n                elementos = response.data;\r\n                break;\r\n            case 2://paginacao da pagina de carrinho\r\n                let chaves  = Object.keys(localStorage);\r\n                let qChaves = chaves.length;//quantidade de chaves\r\n                while( qChaves-- ) {\r\n                    elementos.push(JSON.parse(localStorage.getItem(chaves[qChaves])));\r\n                }\r\n                break;\r\n\r\n        }\r\n \r\n        // response = this.state.elementos;\r\n\r\n        let result      = [];\r\n        let totalPage   = Math.ceil(elementos.length/LIMIT_ITENS); \r\n        let count       = (page * LIMIT_ITENS) - LIMIT_ITENS;\r\n        let delimitador = count + LIMIT_ITENS;\r\n       \r\n        for(let i = count; i < delimitador; i++) {\r\n            if(elementos[i] != null) {\r\n                result.push(elementos[i]);\r\n            }\r\n        }\r\n\r\n        debugger\r\n\r\n        this.setState({\r\n            elemMostra : result,\r\n            pages      : totalPage,\r\n            page,\r\n        });\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const tipo = this.props;\r\n\r\n        switch(tipo) {\r\n            case 1://pagina main\r\n                let { pesquisar, pesquisarInativo } = this.context;\r\n                if(!pesquisar) {\r\n                    return;\r\n                }\r\n                break;\r\n            case 2:\r\n                if(!this.state.atualizar) {\r\n                    return;\r\n                }\r\n        \r\n                this.setState({\r\n                    atualizar : false\r\n                });\r\n                break;    \r\n        }\r\n\r\n        this.carregaProdutos();\r\n    };\r\n\r\n    atualiza = () => {\r\n        this.setState({\r\n            atualizar : true\r\n        });\r\n    }\r\n\r\n    renderPaginacao = () => {\r\n        const { tipo }       = this.props;\r\n        const { elemMostra } = this.state;\r\n\r\n        switch(tipo) {\r\n            case 1://paginacao da pagina principal\r\n                return <PaginacaoMain produtos={elemMostra}/>\r\n            case 2://paginacao da pagina carrinho\r\n                return <PaginacaoCarrinho produtos={elemMostra}/>\r\n\r\n        }\r\n    }\r\n\r\n    nextPage = () => {\r\n        const { pesquisar, pesquisarInativo } = this.context;\r\n        const { page, pages } = this.state;\r\n\r\n        if(pesquisar) {\r\n            pesquisarInativo();\r\n        }\r\n\r\n        if(page == pages) {\r\n            return;\r\n        }\r\n\r\n        const nPagina = page + 1;\r\n\r\n        this.carregaProdutos(nPagina);\r\n    };\r\n\r\n    prevPage = () => {\r\n        const { pesquisar, pesquisarInativo } = this.context;\r\n        const { page } = this.state;\r\n\r\n        if(pesquisar) {\r\n            pesquisarInativo();\r\n        }\r\n\r\n        if(page == 1) {\r\n            return;\r\n        }\r\n\r\n        const nPagina = page - 1;\r\n\r\n        this.carregaProdutos(nPagina);\r\n    };\r\n\r\n    render() {\r\n\r\n        const { elemMostra, page, pages } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                {this.renderPaginacao()}\r\n                {elemMostra.length > 0? (\r\n                    <footer className=\"rodape\">\r\n                        <div className=\"paginacao\">\r\n                            <button \r\n                                disabled={page == 1}   \r\n                                onClick={this.prevPage}\r\n                                className=\"btn azul-roxo clicavel\"\r\n                            >\r\n                                Anterior\r\n                            </button>\r\n                            <button \r\n                                disabled={page == pages} \r\n                                onClick={this.nextPage}\r\n                                className=\"btn azul-roxo clicavel\"\r\n                            >\r\n                                Proximo\r\n                            </button>\r\n                        </div>\r\n                    </footer>\r\n                ) : \"\"}\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}