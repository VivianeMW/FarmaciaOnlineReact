{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Drew\\\\Documents\\\\VisualStudio\\\\pin3\\\\src\\\\pages\\\\pagePedido.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport NumberFormat from 'react-number-format';\nimport api from '../services/api';\nimport { ContextoUsuario } from '../components/Session';\nimport Navbar from '../components/usuario/navbar';\nconst LIMIT_ITENS = 8;\n\nclass PagePedido extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: {},\n      pedidos: [],\n      redireciona: false,\n      page: 1,\n      pages: 1\n    };\n\n    this.carregaPedidos = async (page = 1) => {\n      let response = null;\n      let usuarioAutenticado = this.context.usuarioAutenticado;\n\n      if (usuarioAutenticado == null) {\n        return;\n      }\n\n      response = await api.get(\"/Pedido/pedidos?usuid=\".concat(this.state.user.id));\n      let result = [];\n      let totalPage = Math.ceil(response.data.length / LIMIT_ITENS);\n      let count = page * LIMIT_ITENS - LIMIT_ITENS;\n      let delimitador = count + LIMIT_ITENS;\n\n      for (let i = count; i < delimitador; i++) {\n        if (response.data[i] != null) {\n          result.push(response.data[i]);\n        }\n      }\n    };\n\n    this.redireciona = () => {\n      if (!this.state.redireciona) {\n        return;\n      }\n\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      });\n    };\n  }\n\n  componentDidMount() {\n    let usuarioAutenticado = this.context.usuarioAutenticado;\n    let bRedireciona = false;\n\n    if (usuarioAutenticado == null) {\n      bRedireciona = true;\n    }\n\n    this.setState({\n      user: usuarioAutenticado,\n      redireciona: bRedireciona\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          user = _this$state.user,\n          pedidos = _this$state.pedidos;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.redireciona(), React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"container-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Pedidos Realizados\"), pedidos.length > 0 ? React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, pedidos.map(pedido => {\n      return React.createElement(\"li\", {\n        key: pedido._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Data:\"), pedido.data), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"N\\xBA pedido:\"), pedido.nPedido), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Pre\\xE7o:\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(NumberFormat, {\n        value: pedido.preco,\n        displayType: 'text',\n        prefix: 'R$',\n        decimalSeparator: ',',\n        decimalScale: 2,\n        fixedDecimalScale: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Status:\"), pedido.staus)));\n    })) : React.createElement(\"div\", {\n      className: \"empty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Acabou :(\")));\n  }\n\n}\n\nPagePedido.contextType = ContextoUsuario;\nexport default PagePedido;","map":{"version":3,"sources":["C:\\Users\\Drew\\Documents\\VisualStudio\\pin3\\src\\pages\\pagePedido.js"],"names":["React","Component","Redirect","NumberFormat","api","ContextoUsuario","Navbar","LIMIT_ITENS","PagePedido","state","user","pedidos","redireciona","page","pages","carregaPedidos","response","usuarioAutenticado","context","get","id","result","totalPage","Math","ceil","data","length","count","delimitador","i","push","componentDidMount","bRedireciona","setState","render","map","pedido","_id","nPedido","preco","staus","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport NumberFormat from 'react-number-format';\r\nimport api          from '../services/api';\r\n\r\nimport { ContextoUsuario } from '../components/Session';\r\nimport Navbar              from '../components/usuario/navbar';\r\n\r\nconst LIMIT_ITENS = 8;\r\n\r\nclass PagePedido extends Component {\r\n\r\n    static contextType = ContextoUsuario;\r\n\r\n    state = {\r\n        user        : {},\r\n        pedidos     : [],\r\n        redireciona : false,\r\n        page        : 1,\r\n        pages       : 1,\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { usuarioAutenticado } = this.context;\r\n        let  bRedireciona = false;\r\n\r\n        if(usuarioAutenticado == null) {\r\n            bRedireciona = true;\r\n        }\r\n\r\n        this.setState({\r\n            user : usuarioAutenticado,\r\n            redireciona : bRedireciona\r\n        });\r\n    }\r\n\r\n    carregaPedidos = async (page = 1) => {\r\n        let response =  null;\r\n        let { usuarioAutenticado } = this.context;\r\n\r\n        if(usuarioAutenticado == null) {\r\n            return;\r\n        }\r\n\r\n        response = await api.get(`/Pedido/pedidos?usuid=${this.state.user.id}`);\r\n\r\n        let result      = [];\r\n        let totalPage   = Math.ceil(response.data.length/LIMIT_ITENS); \r\n        let count       = (page * LIMIT_ITENS) - LIMIT_ITENS;\r\n        let delimitador = count + LIMIT_ITENS;\r\n\r\n        for(let i = count; i < delimitador; i++) {\r\n            if(response.data[i] != null) {\r\n                result.push(response.data[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    redireciona = () => {\r\n        if(!this.state.redireciona) {\r\n            return;\r\n        }\r\n\r\n        return <Redirect to={\"/\"}/>\r\n    }\r\n\r\n    render() {\r\n        const { user, pedidos } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                {this.redireciona()}\r\n                <header><Navbar /></header>\r\n                <div className=\"container-list\">\r\n                    <h3>Pedidos Realizados</h3>\r\n                    {pedidos.length>0 ? (\r\n                        <ul>\r\n                            {pedidos.map(pedido => {\r\n                                return (\r\n                                    <li key={pedido._id}>\r\n                                        <div className=\"container-list\">\r\n                                            <hr/>\r\n                                            <p><strong>Data:</strong>{pedido.data}</p>\r\n                                            <p><strong>Nº pedido:</strong>{pedido.nPedido}</p>\r\n                                            <p>\r\n                                                <strong>Preço:</strong>\r\n                                                <span>\r\n                                                    <NumberFormat\r\n                                                        value={pedido.preco}\r\n                                                        displayType={'text'}\r\n                                                        prefix={'R$'}\r\n                                                        decimalSeparator={','}\r\n                                                        decimalScale={2}\r\n                                                        fixedDecimalScale={true}\r\n                                                    />\r\n                                                </span>\r\n                                            </p>\r\n                                            <p><strong>Status:</strong>{pedido.staus}</p>\r\n                                        </div>\r\n                                    </li>\r\n                                );\r\n                            })}\r\n                        </ul>\r\n                    ):(\r\n                        <div className=\"empty\">\r\n                            Acabou :(\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PagePedido;"]},"metadata":{},"sourceType":"module"}