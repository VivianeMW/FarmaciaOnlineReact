{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Drew\\\\Documents\\\\VisualStudio\\\\pin3\\\\src\\\\pages\\\\pageMain.js\";\n\n/*\n    Esta é a página principal da aplicação\n*/\nimport React, { Component } from 'react';\nimport '../css/cssPageMain.css';\nimport api from '../services/api';\nimport Reme from '../img/reme1.jpg';\nimport { Link } from 'react-router-dom';\nimport NumberFormat from 'react-number-format';\nimport { ContextoUsuario } from '../components/Session';\nimport Paginacao from '../components/paginacao/paginacao';\nconst LIMIT_ITENS = 8;\nexport default class PageMain extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      produtos: [],\n      produto: {},\n      page: 1,\n      pages: 1,\n      filtrar: false\n    };\n\n    this.carregaProdutos = async function (page = 1) {\n      let response = null;\n      console.log(\"page:\" + page); // console.log(response.data);\n      // console.log('filtro: ' + JSON.parse(this.props.match.params.filtro));\n\n      if (typeof this.context.filtro === 'object') {\n        response = await api.get(\"/Produto\");\n      } else {\n        let oFiltro = JSON.parse(this.context.filtro);\n        response = await api.get(\"/Produto/conteudo=\".concat(oFiltro.conteudo, \"&filtro=\").concat(oFiltro.filtro));\n      }\n\n      let result = [];\n      let totalPage = Math.ceil(response.data.length / LIMIT_ITENS);\n      let count = page * LIMIT_ITENS - LIMIT_ITENS;\n      let delimitador = count + LIMIT_ITENS;\n\n      for (let i = count; i < delimitador; i++) {\n        if (response.data[i] != null) {\n          result.push(response.data[i]);\n        }\n      }\n\n      this.setState({\n        produtos: result,\n        pages: totalPage,\n        page\n      });\n    };\n\n    this.adicionaLocalStorage = produto => {\n      localStorage.setItem(produto.id, JSON.stringify(produto));\n      this.setState({\n        redireciona: true\n      });\n    };\n\n    this.nextPage = () => {\n      const _this$context = this.context,\n            pesquisar = _this$context.pesquisar,\n            pesquisarInativo = _this$context.pesquisarInativo;\n      const _this$state = this.state,\n            page = _this$state.page,\n            pages = _this$state.pages;\n\n      if (pesquisar) {\n        pesquisarInativo();\n      }\n\n      if (page == pages) {\n        return;\n      }\n\n      const nPagina = page + 1;\n      this.carregaProdutos(nPagina);\n    };\n\n    this.prevPage = () => {\n      const _this$context2 = this.context,\n            pesquisar = _this$context2.pesquisar,\n            pesquisarInativo = _this$context2.pesquisarInativo;\n      const page = this.state.page;\n\n      if (pesquisar) {\n        pesquisarInativo();\n      }\n\n      if (page == 1) {\n        return;\n      }\n\n      const nPagina = page - 1;\n      this.carregaProdutos(nPagina);\n    };\n  }\n\n  componentDidMount() {\n    const _this$context3 = this.context,\n          usuarioLogin = _this$context3.usuarioLogin,\n          pesquisar = _this$context3.pesquisar,\n          pesquisarInativo = _this$context3.pesquisarInativo;\n    usuarioLogin(); // pesquisarAtivo();\n\n    const tet = setInterval(pesquisarInativo, 1000);\n    this.carregaProdutos();\n  }\n\n  componentDidUpdate() {\n    const _this$context4 = this.context,\n          pesquisar = _this$context4.pesquisar,\n          pesquisarInativo = _this$context4.pesquisarInativo;\n\n    if (!pesquisar) {\n      return;\n    }\n\n    this.carregaProdutos();\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          produtos = _this$state2.produtos,\n          page = _this$state2.page,\n          pages = _this$state2.pages;\n    return React.createElement(Paginacao, {\n      elementos: produtos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    });\n  }\n\n}\nPageMain.contextType = ContextoUsuario;","map":{"version":3,"sources":["C:\\Users\\Drew\\Documents\\VisualStudio\\pin3\\src\\pages\\pageMain.js"],"names":["React","Component","api","Reme","Link","NumberFormat","ContextoUsuario","Paginacao","LIMIT_ITENS","PageMain","state","produtos","produto","page","pages","filtrar","carregaProdutos","response","console","log","context","filtro","get","oFiltro","JSON","parse","conteudo","result","totalPage","Math","ceil","data","length","count","delimitador","i","push","setState","adicionaLocalStorage","localStorage","setItem","id","stringify","redireciona","nextPage","pesquisar","pesquisarInativo","nPagina","prevPage","componentDidMount","usuarioLogin","tet","setInterval","componentDidUpdate","render","contextType"],"mappings":"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","sourcesContent":["/*\n    Esta é a página principal da aplicação\n*/\nimport React, { Component } from 'react';\n\nimport '../css/cssPageMain.css';\n\nimport api                 from '../services/api';\nimport Reme                from '../img/reme1.jpg';\nimport { Link }            from 'react-router-dom';\nimport NumberFormat        from 'react-number-format';\nimport { ContextoUsuario } from '../components/Session';\n\n\nimport Paginacao from '../components/paginacao/paginacao';\n\nconst LIMIT_ITENS = 8;\n\nexport default class PageMain extends Component {\n\n    static contextType = ContextoUsuario;\n\n    state = {\n        produtos : [],\n        produto  : {},\n        page     : 1,\n        pages    : 1,\n        filtrar  : false\n    };\n\n    componentDidMount() {\n        const { usuarioLogin, pesquisar, pesquisarInativo } = this.context;\n\n        usuarioLogin();\n        // pesquisarAtivo();\n\n        const tet = setInterval(pesquisarInativo, 1000);\n\n\n        this.carregaProdutos();\n    };\n\n    componentDidUpdate() {\n        const { pesquisar, pesquisarInativo } = this.context;\n\n        if(!pesquisar) {\n            return;\n        }\n\n\n        this.carregaProdutos();\n    };\n\n    carregaProdutos = async function(page = 1) {\n        let response = null;\n\n        console.log(\"page:\" + page);\n        // console.log(response.data);\n        // console.log('filtro: ' + JSON.parse(this.props.match.params.filtro));\n\n        if(typeof this.context.filtro === 'object') {\n            response = await api.get(`/Produto`);\n        } else {\n            let oFiltro = JSON.parse(this.context.filtro);\n            response = await api.get(`/Produto/conteudo=${oFiltro.conteudo}&filtro=${oFiltro.filtro}`);\n        }\n\n        let result      = [];\n        let totalPage   = Math.ceil(response.data.length/LIMIT_ITENS); \n        let count       = (page * LIMIT_ITENS) - LIMIT_ITENS;\n        let delimitador = count + LIMIT_ITENS;\n\n        for(let i = count; i < delimitador; i++) {\n            if(response.data[i] != null) {\n                result.push(response.data[i]);\n            }\n        }\n\n        this.setState({\n            produtos : result,\n            pages    : totalPage,\n            page,\n        });\n\n    }\n\n    adicionaLocalStorage = produto => {\n\n        localStorage.setItem(produto.id, JSON.stringify(produto));\n        this.setState({\n            redireciona: true\n        });\n    };\n\n    nextPage = () => {\n        const { pesquisar, pesquisarInativo } = this.context;\n        const { page, pages } = this.state;\n\n        if(pesquisar) {\n            pesquisarInativo();\n        }\n\n        if(page == pages) {\n            return;\n        }\n\n        const nPagina = page + 1;\n\n        this.carregaProdutos(nPagina);\n    };\n\n    prevPage = () => {\n        const { pesquisar, pesquisarInativo } = this.context;\n        const { page } = this.state;\n\n        if(pesquisar) {\n            pesquisarInativo();\n        }\n\n        if(page == 1) {\n            return;\n        }\n\n        const nPagina = page - 1;\n\n        this.carregaProdutos(nPagina);\n    };\n    \n    render() {\n        const { produtos, page, pages } = this.state;\n        \n        return (\n          <Paginacao elementos={produtos}/>\n        );\n    };\n\n}"]},"metadata":{},"sourceType":"module"}