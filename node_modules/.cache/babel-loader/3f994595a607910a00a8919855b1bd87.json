{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Drew\\\\Documents\\\\VisualStudio\\\\pin3\\\\src\\\\components\\\\paginacao\\\\paginacao.js\";\nimport React, { Component } from 'react';\nimport api from '../../services/api';\nimport { ContextoUsuario } from '../Session';\nimport PaginacaoMain from './paginacaoMain';\nimport PaginacaoCarrinho from './paginacaoCarrinho';\nconst LIMIT_ITENS = 8;\nexport default class Paginacao extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      elemMostra: [],\n      page: 1,\n      pages: 1\n    };\n\n    this.carregaProdutos = async function (page = 1) {\n      debugger;\n      const tipo = this.props.tipo;\n      let response = null;\n      let elementos = [];\n\n      switch (tipo) {\n        case 1:\n          //paginacao da pagina principal\n          if (typeof this.context.filtro === 'object') {\n            response = await api.get(\"/Produto\");\n          } else {\n            let oFiltro = JSON.parse(this.context.filtro);\n            response = await api.get(\"/Produto/conteudo=\".concat(oFiltro.conteudo, \"&filtro=\").concat(oFiltro.filtro));\n          }\n\n          elementos = response.data;\n          break;\n\n        case 2:\n          //paginacao da pagina de carrinho\n          let chaves = Object.keys(localStorage);\n          let qChaves = chaves.length; //quantidade de chaves\n\n          while (qChaves--) {\n            elementos.push(JSON.parse(localStorage.getItem(chaves[qChaves])));\n          }\n\n          break;\n      } // response = this.state.elementos;\n\n\n      let result = [];\n      let totalPage = Math.ceil(elementos.length / LIMIT_ITENS);\n      let count = page * LIMIT_ITENS - LIMIT_ITENS;\n      let delimitador = count + LIMIT_ITENS;\n\n      for (let i = count; i < delimitador; i++) {\n        if (elementos[i] != null) {\n          result.push(elementos[i]);\n        }\n      }\n\n      debugger;\n      this.setState({\n        elemMostra: result,\n        pages: totalPage,\n        page\n      });\n    };\n\n    this.renderPaginacao = () => {\n      const tipo = this.props.tipo;\n      const elemMostra = this.state.elemMostra;\n\n      switch (tipo) {\n        case 1:\n          //paginacao da pagina principal\n          return React.createElement(PaginacaoMain, {\n            produtos: elemMostra,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          });\n\n        case 2:\n          //paginacao da pagina carrinho\n          return React.createElement(PaginacaoCarrinho, {\n            produtos: elemMostra,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          });\n      }\n    };\n\n    this.nextPage = () => {\n      const _this$context = this.context,\n            pesquisar = _this$context.pesquisar,\n            pesquisarInativo = _this$context.pesquisarInativo;\n      const _this$state = this.state,\n            page = _this$state.page,\n            pages = _this$state.pages;\n\n      if (pesquisar) {\n        pesquisarInativo();\n      }\n\n      if (page == pages) {\n        return;\n      }\n\n      const nPagina = page + 1;\n      this.carregaProdutos(nPagina);\n    };\n\n    this.prevPage = () => {\n      const _this$context2 = this.context,\n            pesquisar = _this$context2.pesquisar,\n            pesquisarInativo = _this$context2.pesquisarInativo;\n      const page = this.state.page;\n\n      if (pesquisar) {\n        pesquisarInativo();\n      }\n\n      if (page == 1) {\n        return;\n      }\n\n      const nPagina = page - 1;\n      this.carregaProdutos(nPagina);\n    };\n  }\n\n  componentDidMount() {\n    const pesquisarInativo = this.context.pesquisarInativo;\n    const tet = setInterval(pesquisarInativo, 1000);\n    debugger;\n    this.carregaProdutos();\n  }\n\n  componentDidUpdate() {\n    const _this$context3 = this.context,\n          pesquisar = _this$context3.pesquisar,\n          pesquisarInativo = _this$context3.pesquisarInativo;\n\n    if (!pesquisar) {\n      return;\n    }\n\n    this.carregaProdutos();\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          elemMostra = _this$state2.elemMostra,\n          page = _this$state2.page,\n          pages = _this$state2.pages;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, this.renderPaginacao(), elemMostra.length > 0 ? React.createElement(\"footer\", {\n      className: \"rodape\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"paginacao\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      disabled: page == 1,\n      onClick: this.prevPage,\n      className: \"btn azul-roxo clicavel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Anterior\"), React.createElement(\"button\", {\n      disabled: page == pages,\n      onClick: this.nextPage,\n      className: \"btn azul-roxo clicavel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Proximo\"))) : \"\");\n  }\n\n}\nPaginacao.contextType = ContextoUsuario;","map":{"version":3,"sources":["C:\\Users\\Drew\\Documents\\VisualStudio\\pin3\\src\\components\\paginacao\\paginacao.js"],"names":["React","Component","api","ContextoUsuario","PaginacaoMain","PaginacaoCarrinho","LIMIT_ITENS","Paginacao","state","elemMostra","page","pages","carregaProdutos","tipo","props","response","elementos","context","filtro","get","oFiltro","JSON","parse","conteudo","data","chaves","Object","keys","localStorage","qChaves","length","push","getItem","result","totalPage","Math","ceil","count","delimitador","i","setState","renderPaginacao","nextPage","pesquisar","pesquisarInativo","nPagina","prevPage","componentDidMount","tet","setInterval","componentDidUpdate","render","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport api                 from '../../services/api';\r\nimport { ContextoUsuario } from '../Session';\r\n\r\nimport PaginacaoMain     from './paginacaoMain';\r\nimport PaginacaoCarrinho from './paginacaoCarrinho';\r\n\r\nconst LIMIT_ITENS = 8;\r\n\r\nexport default class Paginacao extends Component {\r\n\r\n    static contextType = ContextoUsuario;\r\n\r\n    state = {\r\n        elemMostra: [],\r\n        page     : 1,\r\n        pages    : 1,\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { pesquisarInativo } = this.context;\r\n\r\n\r\n        const tet = setInterval(pesquisarInativo, 1000);\r\n\r\n        debugger;\r\n        this.carregaProdutos();\r\n    }\r\n\r\n    carregaProdutos = async function(page = 1) {\r\n        debugger\r\n        const { tipo } = this.props;\r\n        let response  = null;\r\n        let elementos = [];\r\n\r\n        switch(tipo) {\r\n            case 1://paginacao da pagina principal\r\n                if(typeof this.context.filtro === 'object') {\r\n                    response = await api.get(`/Produto`);\r\n                } else {\r\n                    let oFiltro = JSON.parse(this.context.filtro);\r\n                    response = await api.get(`/Produto/conteudo=${oFiltro.conteudo}&filtro=${oFiltro.filtro}`);\r\n                }\r\n                elementos = response.data;\r\n                break;\r\n            case 2://paginacao da pagina de carrinho\r\n                let chaves  = Object.keys(localStorage);\r\n                let qChaves = chaves.length;//quantidade de chaves\r\n                while( qChaves-- ) {\r\n                    elementos.push(JSON.parse(localStorage.getItem(chaves[qChaves])));\r\n                }\r\n                break;\r\n\r\n        }\r\n \r\n        // response = this.state.elementos;\r\n\r\n        let result      = [];\r\n        let totalPage   = Math.ceil(elementos.length/LIMIT_ITENS); \r\n        let count       = (page * LIMIT_ITENS) - LIMIT_ITENS;\r\n        let delimitador = count + LIMIT_ITENS;\r\n       \r\n        for(let i = count; i < delimitador; i++) {\r\n            if(elementos[i] != null) {\r\n                result.push(elementos[i]);\r\n            }\r\n        }\r\n\r\n        debugger\r\n\r\n        this.setState({\r\n            elemMostra : result,\r\n            pages      : totalPage,\r\n            page,\r\n        });\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const { pesquisar, pesquisarInativo } = this.context;\r\n\r\n        if(!pesquisar) {\r\n            return;\r\n        }\r\n\r\n        this.carregaProdutos();\r\n    };\r\n\r\n    renderPaginacao = () => {\r\n        const { tipo }       = this.props;\r\n        const { elemMostra } = this.state;\r\n\r\n        switch(tipo) {\r\n            case 1://paginacao da pagina principal\r\n                return <PaginacaoMain produtos={elemMostra}/>\r\n            case 2://paginacao da pagina carrinho\r\n                return <PaginacaoCarrinho produtos={elemMostra}/>\r\n\r\n        }\r\n    }\r\n\r\n    nextPage = () => {\r\n        const { pesquisar, pesquisarInativo } = this.context;\r\n        const { page, pages } = this.state;\r\n\r\n        if(pesquisar) {\r\n            pesquisarInativo();\r\n        }\r\n\r\n        if(page == pages) {\r\n            return;\r\n        }\r\n\r\n        const nPagina = page + 1;\r\n\r\n        this.carregaProdutos(nPagina);\r\n    };\r\n\r\n    prevPage = () => {\r\n        const { pesquisar, pesquisarInativo } = this.context;\r\n        const { page } = this.state;\r\n\r\n        if(pesquisar) {\r\n            pesquisarInativo();\r\n        }\r\n\r\n        if(page == 1) {\r\n            return;\r\n        }\r\n\r\n        const nPagina = page - 1;\r\n\r\n        this.carregaProdutos(nPagina);\r\n    };\r\n\r\n    render() {\r\n\r\n        const { elemMostra, page, pages } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                {this.renderPaginacao()}\r\n                {elemMostra.length > 0? (\r\n                    <footer className=\"rodape\">\r\n                        <div className=\"paginacao\">\r\n                            <button \r\n                                disabled={page == 1}   \r\n                                onClick={this.prevPage}\r\n                                className=\"btn azul-roxo clicavel\"\r\n                            >\r\n                                Anterior\r\n                            </button>\r\n                            <button \r\n                                disabled={page == pages} \r\n                                onClick={this.nextPage}\r\n                                className=\"btn azul-roxo clicavel\"\r\n                            >\r\n                                Proximo\r\n                            </button>\r\n                        </div>\r\n                    </footer>\r\n                ) : \"\"}\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}