{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Drew\\\\Documents\\\\VisualStudio\\\\pin3\\\\src\\\\pages\\\\pageCarrinho.js\";\nimport React, { Component } from 'react';\nimport '../css/cssPageCarrinho.css';\nimport ImgReme from '../img/reme1.jpg';\nimport NumberFormat from 'react-number-format';\nimport { Link } from 'react-router-dom';\nimport { ContextoUsuario } from '../components/Session';\nimport Paginacao from '../components/paginacao/paginacao';\nconst LIMIT_ITENS = 3;\nexport default class PageCarrinho extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      produtos: [],\n      tProdutos: [],\n      //total de produtos\n      produto: {},\n      page: 1,\n      pages: 1,\n      atualizar: false\n    };\n\n    this.carregaProdutos = async (page = 1) => {\n      let aProdutos = [],\n          chaves = Object.keys(localStorage),\n          i = chaves.length;\n\n      while (i--) {\n        aProdutos.push(JSON.parse(localStorage.getItem(chaves[i])));\n      }\n\n      let result = [];\n      let totalPage = Math.ceil(aProdutos.length / LIMIT_ITENS);\n      let count = page * LIMIT_ITENS - LIMIT_ITENS;\n      let delimitador = count + LIMIT_ITENS;\n\n      for (let i = count; i < delimitador; i++) {\n        if (aProdutos[i] != null) {\n          result.push(aProdutos[i]);\n        }\n      }\n\n      this.setState({\n        produtos: result,\n        tProdutos: aProdutos,\n        pages: totalPage,\n        page\n      });\n    };\n\n    this.removeLocalStorege = id => {\n      localStorage.removeItem(id);\n      this.setState({\n        atualizar: true\n      });\n    };\n\n    this.getPrecoTotal = () => {\n      const tProdutos = this.state.tProdutos;\n      let preco = 0;\n\n      for (let i = 0; i < tProdutos.length; i++) {\n        if (isNaN(tProdutos[i].preco)) {\n          continue;\n        }\n\n        preco += tProdutos[i].preco;\n      }\n\n      return preco;\n    };\n\n    this.nextPage = () => {\n      const _this$state = this.state,\n            page = _this$state.page,\n            pages = _this$state.pages;\n\n      if (page == pages) {\n        return;\n      }\n\n      const nPagina = page + 1;\n      this.carregaProdutos(nPagina);\n    };\n\n    this.prevPage = () => {\n      const page = this.state.page;\n\n      if (page == 1) {\n        return;\n      }\n\n      const nPagina = page - 1;\n      this.carregaProdutos(nPagina);\n    };\n  }\n\n  componentDidMount() {\n    this.carregaProdutos();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.atualizar) {\n      return;\n    }\n\n    this.setState({\n      atualizar: false\n    });\n    this.carregaProdutos();\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          produtos = _this$state2.produtos,\n          page = _this$state2.page,\n          pages = _this$state2.pages;\n    return React.createElement(Paginacao, {\n      tipo: 2,\n      limite: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    });\n  }\n\n}\nPageCarrinho.contextType = ContextoUsuario;","map":{"version":3,"sources":["C:\\Users\\Drew\\Documents\\VisualStudio\\pin3\\src\\pages\\pageCarrinho.js"],"names":["React","Component","ImgReme","NumberFormat","Link","ContextoUsuario","Paginacao","LIMIT_ITENS","PageCarrinho","state","produtos","tProdutos","produto","page","pages","atualizar","carregaProdutos","aProdutos","chaves","Object","keys","localStorage","i","length","push","JSON","parse","getItem","result","totalPage","Math","ceil","count","delimitador","setState","removeLocalStorege","id","removeItem","getPrecoTotal","preco","isNaN","nextPage","nPagina","prevPage","componentDidMount","componentDidUpdate","render","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport '../css/cssPageCarrinho.css';\n\nimport ImgReme      from '../img/reme1.jpg';\nimport NumberFormat from 'react-number-format';\n\nimport { Link } from 'react-router-dom';\n\nimport { ContextoUsuario } from '../components/Session';\n\nimport Paginacao from '../components/paginacao/paginacao';\n\nconst LIMIT_ITENS = 3;\n\nexport default class PageCarrinho extends Component {\n\n    static contextType = ContextoUsuario;\n\n    state = {\n        produtos  : [],\n        tProdutos : [],//total de produtos\n        produto   : {},\n        page      : 1,\n        pages     : 1, \n        atualizar : false\n    }\n\n    componentDidMount() {\n        this.carregaProdutos();\n    };\n\n    componentDidUpdate() {\n        if(!this.state.atualizar) {\n            return;\n        }\n\n        this.setState({\n            atualizar : false\n        });\n\n        this.carregaProdutos();\n    };\n\n    carregaProdutos = async (page = 1) => {\n        let aProdutos = [],\n            chaves    = Object.keys(localStorage),\n            i         = chaves.length;\n\n        while( i-- ) {\n            aProdutos.push(JSON.parse(localStorage.getItem(chaves[i])));\n        }    \n\n        let result      = [];\n        let totalPage   = Math.ceil(aProdutos.length/LIMIT_ITENS); \n        let count       = (page * LIMIT_ITENS) - LIMIT_ITENS;\n        let delimitador = count + LIMIT_ITENS;\n\n        for(let i = count; i < delimitador; i++) {\n            if(aProdutos[i] != null) {\n                result.push(aProdutos[i]);\n            }\n        }\n\n        this.setState({\n            produtos : result,\n            tProdutos: aProdutos,\n            pages    : totalPage,\n            page\n        });\n    };\n\n    removeLocalStorege = (id) => {\n        localStorage.removeItem(id);\n        this.setState({\n            atualizar : true\n        });\n    };\n\n    getPrecoTotal = () => {\n        const { tProdutos } = this.state;\n        let preco = 0;\n\n        for(let i = 0; i < tProdutos.length; i++) {\n            if(isNaN(tProdutos[i].preco)) {\n                continue;\n            }\n            preco += tProdutos[i].preco;\n        }\n\n        return preco;\n    };\n\n    nextPage = () => {\n        const { page, pages } = this.state;\n\n        if(page == pages) {\n            return;\n        }\n\n        const nPagina = page + 1;\n\n        this.carregaProdutos(nPagina);\n    };\n\n    prevPage = () => {\n        const { page } = this.state;\n\n        if(page == 1) {\n            return;\n        }\n\n        const nPagina = page - 1;\n\n        this.carregaProdutos(nPagina);\n    };\n\n    render() {\n        const { produtos, page, pages } = this.state;\n        return (\n            <Paginacao tipo={2} limite={3} />\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}