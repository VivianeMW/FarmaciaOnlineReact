{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Drew\\\\Documents\\\\VisualStudio\\\\pin3\\\\src\\\\components\\\\paginacao\\\\paginacao.js\";\nimport React, { Component } from 'react';\nimport { ContextoUsuario } from '../Session';\nimport PaginacaoPaginaMain from './paginacaoPaginaMain';\nconst LIMIT_ITENS = 8;\nexport default class Paginacao extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tipo: 0,\n      elementos: [],\n      elemMostra: [],\n      page: 1,\n      pages: 1\n    };\n\n    this.carregaProdutos = async function (page = 1) {\n      const tipo = this.state.tipo;\n      let response = null;\n\n      switch (tipo) {\n        case 1:\n          if (typeof this.context.filtro === 'object') {\n            response = await api.get(\"/Produto\");\n          } else {\n            let oFiltro = JSON.parse(this.context.filtro);\n            response = await api.get(\"/Produto/conteudo=\".concat(oFiltro.conteudo, \"&filtro=\").concat(oFiltro.filtro));\n          }\n\n          break;\n      }\n\n      response = this.state.elementos;\n      let result = [];\n      let totalPage = Math.ceil(response.data.length / LIMIT_ITENS);\n      let count = page * LIMIT_ITENS - LIMIT_ITENS;\n      let delimitador = count + LIMIT_ITENS;\n\n      for (let i = count; i < delimitador; i++) {\n        if (response[i] != null) {\n          result.push(response[i]);\n        }\n      }\n\n      this.setState({\n        elemMostra: result,\n        pages: totalPage,\n        page\n      });\n    };\n\n    this.nextPage = () => {\n      const _this$context = this.context,\n            pesquisar = _this$context.pesquisar,\n            pesquisarInativo = _this$context.pesquisarInativo;\n      const _this$state = this.state,\n            page = _this$state.page,\n            pages = _this$state.pages;\n\n      if (pesquisar) {\n        pesquisarInativo();\n      }\n\n      if (page == pages) {\n        return;\n      }\n\n      const nPagina = page + 1;\n      this.carregaProdutos(nPagina);\n    };\n\n    this.prevPage = () => {\n      const _this$context2 = this.context,\n            pesquisar = _this$context2.pesquisar,\n            pesquisarInativo = _this$context2.pesquisarInativo;\n      const page = this.state.page;\n\n      if (pesquisar) {\n        pesquisarInativo();\n      }\n\n      if (page == 1) {\n        return;\n      }\n\n      const nPagina = page - 1;\n      this.carregaProdutos(nPagina);\n    };\n  }\n\n  componentDidMount() {\n    debugger;\n    this.setState({\n      tipo: this.props.tipo,\n      elementos: this.props.elementos\n    });\n  }\n\n  render() {\n    const elemMostra = this.state.elemMostra;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(PaginacaoPaginaMain, {\n      produtos: elemMostra,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }));\n  }\n\n}\nPaginacao.contextType = ContextoUsuario;","map":{"version":3,"sources":["C:\\Users\\Drew\\Documents\\VisualStudio\\pin3\\src\\components\\paginacao\\paginacao.js"],"names":["React","Component","ContextoUsuario","PaginacaoPaginaMain","LIMIT_ITENS","Paginacao","state","tipo","elementos","elemMostra","page","pages","carregaProdutos","response","context","filtro","api","get","oFiltro","JSON","parse","conteudo","result","totalPage","Math","ceil","data","length","count","delimitador","i","push","setState","nextPage","pesquisar","pesquisarInativo","nPagina","prevPage","componentDidMount","props","render","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { ContextoUsuario } from '../Session';\r\n\r\nimport PaginacaoPaginaMain from './paginacaoPaginaMain';\r\n\r\nconst LIMIT_ITENS = 8;\r\n\r\nexport default class Paginacao extends Component {\r\n\r\n    static contextType = ContextoUsuario;\r\n\r\n    state = {\r\n        tipo : 0,\r\n        elementos : [], \r\n        elemMostra: [],\r\n        page     : 1,\r\n        pages    : 1,\r\n    }\r\n\r\n    componentDidMount() {\r\n        debugger;\r\n        this.setState({\r\n            tipo : this.props.tipo,\r\n            elementos : this.props.elementos\r\n        });\r\n    }\r\n\r\n    carregaProdutos = async function(page = 1) {\r\n        const { tipo } = this.state;\r\n        let response = null;\r\n\r\n        switch(tipo) {\r\n            case 1:\r\n                if(typeof this.context.filtro === 'object') {\r\n                    response = await api.get(`/Produto`);\r\n                } else {\r\n                    let oFiltro = JSON.parse(this.context.filtro);\r\n                    response = await api.get(`/Produto/conteudo=${oFiltro.conteudo}&filtro=${oFiltro.filtro}`);\r\n                }\r\n                break;\r\n        }\r\n \r\n        response = this.state.elementos;\r\n\r\n        let result      = [];\r\n        let totalPage   = Math.ceil(response.data.length/LIMIT_ITENS); \r\n        let count       = (page * LIMIT_ITENS) - LIMIT_ITENS;\r\n        let delimitador = count + LIMIT_ITENS;\r\n\r\n        for(let i = count; i < delimitador; i++) {\r\n            if(response[i] != null) {\r\n                result.push(response[i]);\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            elemMostra : result,\r\n            pages      : totalPage,\r\n            page,\r\n        });\r\n\r\n    }\r\n\r\n    nextPage = () => {\r\n        const { pesquisar, pesquisarInativo } = this.context;\r\n        const { page, pages } = this.state;\r\n\r\n        if(pesquisar) {\r\n            pesquisarInativo();\r\n        }\r\n\r\n        if(page == pages) {\r\n            return;\r\n        }\r\n\r\n        const nPagina = page + 1;\r\n\r\n        this.carregaProdutos(nPagina);\r\n    };\r\n\r\n    prevPage = () => {\r\n        const { pesquisar, pesquisarInativo } = this.context;\r\n        const { page } = this.state;\r\n\r\n        if(pesquisar) {\r\n            pesquisarInativo();\r\n        }\r\n\r\n        if(page == 1) {\r\n            return;\r\n        }\r\n\r\n        const nPagina = page - 1;\r\n\r\n        this.carregaProdutos(nPagina);\r\n    };\r\n\r\n    render() {\r\n\r\n        const { elemMostra } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <PaginacaoPaginaMain produtos={elemMostra}/>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}